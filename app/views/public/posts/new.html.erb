<style>
  @media only screen and (max-width: 600px) {
    .plate {
      width: 100%; /* 幅を100%に設定 */
    }
    .home-box {
      padding: 0 10px; /* 左右のパディングを追加 */
    }
    .notification {
      margin: 10px 0; /* 通知の間のマージンを追加 */
    }
  }
    h1 {
      padding-top: 10px;
    }  
   
</style>
<div style="text-align: center;">
  <h1>新しい投稿をする</h1>

  <%= form_with model: @post, url: public_posts_path, multipart: true do |form| %>
    <% if @post.errors.any? %>
      <div class="notification">
        <ul>
          <% @post.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

<p>
  <%= form.label :title, "タイトル" %><br>
  <%= form.text_field :title, maxlength: 100  %>
</p>


    <p>
      <%= form.label :content, "投稿文" %><br>
      <%= form.text_area :content, rows: 5, cols: 30 %>
    </p>

    <p>
      <%= form.hidden_field :user_id, value: current_user.id %>
    </p>

    <p>
      <%= form.label :image, "ペットの写真" %><br>
      <%= form.file_field :image %>
    </p>

    <p>
      <%= form.submit "投稿する" %>
    </p>
  <% end %>
</div>

<script>
document.addEventListener("DOMContentLoaded", function() {
  var input = document.querySelector('input[name="title"]');
  var maxWidth = 400; // ピクセル単位での最大幅
  var fontSize = parseInt(window.getComputedStyle(input).fontSize); // フォントサイズを取得

  input.addEventListener("input", function() {
    var canvas = document.createElement("canvas");
    var context = canvas.getContext("2d");
    context.font = fontSize + "px Arial"; // フォントを設定
    var width = context.measureText(input.value).width; // テキストの幅を計算

    // テキストの幅が最大幅を超えた場合、テキストを切り詰める
    if (width > maxWidth) {
      var characters = Math.floor((maxWidth / width) * input.value.length);
      input.value = input.value.slice(0, characters);
    }
  });
});
</script>
